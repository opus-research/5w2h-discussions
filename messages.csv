How about adding Dynomite and Elaticssearch to the image?
"Caught this in the compose logs, looks like there is something wrong with my elastic configuration:\r\n`conductor_1      | 8560 [main] ERROR com.netflix.conductor.server.ConductorServer  - Error starting embedded elasticsearch.  Search functionality will be impacted: file:/conductor-server-1.6.0-SNAPSHOT-all.jar!/es_template.json`. \r\nIf anything jumps out at you as to what I configured wrong, please let me know. Does this impact the use of dynomite? I will be taking a closer look at it tomorrow"
Can you update the .md file under the docs and submit PR?  I will do a gh-depoy from there.
Any reason this build got failed?
@picaron This may not be required.  Have you tried configuring the workflow with workflow task marked as optional?  We have this feature in a pre-release version 1.7.2+.\r\n
@v1r3n @picaron  Wouldn't it be better to make HTTP task extend the WorflowTask instead?
" actually I deleted the branch after you merged a recent PR because my changes were no longer compatible with the latest `master`, main reason being that the `COMPLETED_WITH_ERRORS` status was removed. I would be happy to create a new PR. Since this status `COMPLETED_WITH_ERRORS` no longer exists, how do to suggest to implement this? Should I simply set the HTTP task to `COMPLETED` or is there another better approach?"
@v1r3n any updates on supporting optional HTTP tasks?\r\n
@cquon will this change support ES 2.x?
@cquon thanks.  This could be a problem because we have few users including ourselves using it on 2.x and are not yet ready to move to 5.x. Is there a way to create a separate module for ES 5 and put this class in there?  That would allow folks to pick the right version.  Also I would suggest renaming the class to reflect that. Thoughts?
"@v1r3n Yes that definitely makes sense.\r\n\r\nWhen you say different module do you mean a different top level project?\r\n\r\nThe legacy support for elasticsearch 2.4 has a dependency on ""org.elasticsearch:elasticsearch:2.+""\r\n\r\nwhile elasticsearch 5."
"@cquon any chance you can create a separate module and put this there?  The reason is we have users using it over 2.x and there are no plans to push them to 5 for a while, so it will be required to keep both versions available till then."
"Sure will look into doing that first before moving to rest client.\r\n\r\nAs I mentioned earlier:\r\n\r\nThe elasticsearch 5.3.0 has a dependency on ""org.elasticsearch:elasticsearch:5.3.0"" and ""org.elasticsearch.client:transport:5.3.0"" which conflicts with the current ""org.elasticsearch:elasticsearch:2.+"" so only one will be picked up.\r\n\r\nDo you recommend under top level conductor directory having an elasticsearch2-client and elasticsearch5-client project for example, each with their own dependencies and then the build.gradle for redis-persistence use a specific one when building (""compile project(':elasticsearch2-client')"")?  So it can default to the existing elasticsearch configuration and one could just change it to (""compile project(':elasticsearch5-client')"") when wanting to change?"
@v1r3n could you consider merging this PR?\r\n\r\nWe really need HTTP tasks to support OAuth authentication\r\n\r\nIdeally we'd like to merge this feature here to avoid maintaining a separate dependency. I think this could be useful to others as well.\r\n
"Thanks for the pertinent comments @tommack \r\n\r\nRegarding your suggestions: \r\n\r\n1. You are right, maybe we could call this a JsonJqTransform ?\r\n2. I'm not sure about exposing the entire input data. That requires more complex processing in the query expression. A dedicated attribute gives some control of the data that gets passed to the processor.\r\n3. Good idea, I'll do that\r\n4. I'll fix that\r\n5. The issue I had is that using the JQ library, the result is always wrapped in a list even if the result of the query does not return a list. I think you need to know the type of result your query expression will be generating anyhow. We could implement something like you suggest but I feel the output will be more convoluted\r\n\r\n"
"1. done âœ… \r\n2. Maybe I'm missing something but doing that, wouldn't the processor also receive the queryExpression parameter? I think its preferable to have some control on the data interpreted by the query no?\r\n3. done âœ… \r\n4. done âœ… \r\n5. The issue is that if you write some expression that does not return a list, somehow the Java jq lib still always wraps it in a list. For example, I was debugging my expression using the online tool (https://jqplay.org/) and it returns me the object I expect. But when the jq java library processes the result, it always wrap the result in a list. I think it's because you can optionally pass a list of transformations to the lib. That's why I need to ""unwrap"" that result. If you write an expression that returns a list, it will stay a list using the current code (because the jq lib will put that list in a list ðŸ˜± )\r\n\r\nPR : https://github.com/Netflix/conductor/pull/239"

"This is a nice feature... is there any documentation for the usage? One of our API returns following JSON\r\n```\r\n{\r\n    ""hits"": [\r\n        {\r\n            ""_index"": ""mes$i$v2$lid_infor.daf.daf$mds_file$1.0$1561444341392"",\r\n            ""_type"": ""mds_file"",\r\n            ""_source"": {\r\n                ""LASTCHANGEDTS"": ""2018-11-06T10:01:10Z""\r\n            },\r\n            ""_id"": ""3_ax1"",\r\n            ""_score"": 4.491742\r\n        },\r\n        {\r\n            ""_index"": ""mes$i$v2$lid_infor.daf.daf$mds_file$1.0$1567159125621"",\r\n            ""_type"": ""mds_file"",\r\n            ""_source"": {\r\n                ""LASTCHANGEDTS"": ""2019-04-25T07:07:14.223Z""\r\n            },\r\n            ""_id"": ""3_ax2"",\r\n            ""_score"": 2.2275105\r\n        }\r\n    ]\r\n}\r\n```\r\nI used following task definition, but the workflow results in error. I tested JQ on jqplay.org and they work as expected.\r\n```\r\n{\r\n    ""type"": ""JSON_JQ_TRANSFORM"",\r\n    ""name"": ""transform"",\r\n    ""taskReferenceName"": ""TransformSerchResult"",\r\n    ""inputParameters"": {\r\n        ""hits"": ""${search.output.response.body}"",\r\n        ""queryExpression"": "".hits[] |=  { id: ._id, index: ._index, source: {created:._source.LASTCHANGEDTS} }""\r\n    }\r\n}\r\n```\r\nAny suggestions ?"
@v1r3n can you please review this very small change?\r\n\r\nit would be helpful for debugging HTTP tasks and also would allow to do some processing based on the reason phrase.
Hi @v1r3n\r\n\r\nCould you please review this very small PR ?\r\n\r\nit is a bit inconvenient having to update the `build.gradle` all the time when switching branches.
@picaron can you send this against the `dev` branch?
"How about not polling for tasks if the workers are busy?  So when the queue is full, the polling should be paused.  "
@v1r3n  any comments?
"what's the driving factor behind this change, if you don't mind my asking? DTO/DO separation tends to add a lot of complexity in my experience."
"Hi @picaron \r\n\r\nI'm also interested in a SQL implementation for Conductor, so i was looking into your code.\r\n\r\nDid you try it with the Client provided?\r\n\r\nOn my tests it doesn't work, because it will always fail to Ack the task, due to the setUnackTimeout method always returning false.\r\n\r\nThanks,"
Hi @luisnrkl \r\n\r\nI have added the missing implementation for `setUnackTimeout` and `processUnacks`\r\n\r\nCan you perform your tests again?\r\n\r\n\r\n\r\n
"Hi @tommack \r\n\r\nI addressed all your comments and made a few improvements, can you please have another look when you get a chance?"
@v1r3n @tommack can you please review the PR again?\r\n\r\nWe addressed all comments raised by @tommack
thanks @vikramsingh2104 \r\nwill you revert or I will create another PR ?
"thanks @v1r3n \r\n\r\none more thing: the 1.8.0 release is currently unusable because of this issue, is it possible to make a new 1.8.1 release soon?"
"Hello @vikramsingh2104, do you have any update about this review? :)"
"Hello @v1r3n @vikramsingh2104, do you have any news about this PR? :)"
This could lead to huge reads - its quite possible that number of tasks over the period grows to large size (millions).\r\n\r\nHow about using indexing system in elasticsearch to get the tasks?\r\n\r\n@math29 what do you think about the above?
We don't wanna use elasticsearch on our side for now.\r\n\r\n@v1r3n what about using SSCAN for getTasks methods (adding 2 parameters to this method for pagination)?
thanks @v1r3n \r\n\r\nare you going to create another 1.8.2 release candidate?
@v1r3n @vikramsingh2104 can you review/merge this one-liner PR?\r\n\r\nwe found out the latest Flyway version is not compatible with Percona XtraDB Cluster (a MySQL HA solution) in strict mode.\r\n\r\nso the only fix currently is to downgrade the Flyway v
@heajuenhwang can you send this PR against the `dev` branch?
@heajuenhwang can you open this PR against the dev branch?
@v1r3n @vikramsingh2104 any news on releasing a new RC soon?
question on the 1) above - I am trying to understand the need for a separate redis-queue-persistence module.  How is it different from the queues already being used?
"@v1r3n @vikramsingh2104 @pctreddy @cyzhao , any idea when this will be merged? Our production release depends on this. Thanks!"
@pctreddy can you verify that you can create releases with upgraded gradle?
@nsiitk can you send the PR against the `dev` branch?
"Hi @v1r3n @cyzhao, any updates?"
@huangyiminghappy can you send the PR against `dev` branch?
@huangyiminghappy can you remove the `conductor.iml` and send the PR against `dev` branch?
I'm unable to reproduce the failure from CI. Any pointers or is that unrelated?
@rkrsingh can you open this PR agains the `dev` branch?
@mashurex do you want to add the rest of the stuff (module etc) and update the PR so it replaces the existing implementation?\r\n\r\n@picaron @pctreddy
@picaron and @v1r3n is there any chance we can get this reviewed and merged soon? Keeping it up to date and conflict free is getting a bit troublesome.
"@mashurex I agree, let's get this done asap. I think we are very close. Latest code looks good to me overall and all tests run fine but there is one remaining issue: the existing flyway migration script was modified so everyone upgrading will be getting a flyway conflict. Could you please put the changes in a new `V2__xyz.sql` migration file? You can for example add a `V2__update_queue_message.sql` file with an alter table statement in it. When flyway runs on a mysql database with the conductor schema already initialized, it will detect that that initial V1 migration was already done and it will apply the missing V2. Have a look at this page: https://flywaydb.org/getstarted/how ... it explains very clearly how flyway works. Ideally, I'd like to test running my workflows using your PR to make sure everything still works before we proceed with the merge."
"Sounds good. I will get the migrations fixed ASAP.\nOn Sat, Apr 14, 2018 at 09:24 Pascal Chouinard <notifications@github.com>\nwrote:\n\n> @mashurex <https://github.com/mashurex> I agree, let's get this done\n> asap. I think we are very close.\n>\n> Latest code looks good to me overall and all tests run fine but there is\n> one remaining issue: the existing flyway migration script was modified so\n> everyone upgrading will be getting a flyway conflict.\n>\n> Could you please put the changes in a new V2__xyz.sql migration file? You\n> can for example add a V2__update_queue_message.sql file with an alter\n> table statement in it.\n>\n> Ideally, I'd like to test running my workflows using your PR to make sure\n> everything still works before we proceed with the merge.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Netflix/conductor/pull/426#issuecomment-381340988>,\n> or mute the thread\n> "
"@mashurex is it possible to squash your commits into a single one? \r\n\r\nonce merged into the target repo, it would keep the commits history a bit cleaner"
@v1r3n are ok with merging this?
"wonderful, thanks @mashurex !\r\n\r\n@v1r3n can you merge this soon? to avoid our friend further rebasing his PR and managing conflicts ðŸ˜€ \r\n\r\nthanks in advance!\r\n"
@v1r3n I'm not familiar with the `dependencies.lock` how can that be updated? \r\n\r\nis there a special command or we can just remove all references to sql2o from there?
seems @mashurex has addressed all the latest comments\r\n\r\ngood to merge @v1r3n ?
@pctreddy I'm sorry for contacting you like this but since you seem to be very active here I would like to know if there is anything I can do to get feedback for my PR?
"@v1r3n , @pctreddy  - anything else that needs to be done before this pull-request can be merged?"
Any update about this PR? Could it be merged?
can you help me review the pr in https://github.com/Netflix/conductor/pull/503?  Thanks
@hunterford  Can you assign reviewers?
@zsimic Can you merge this branch?
@pctreddy can you resolve the conflict so that can be merged?
Is there any document on the size limit of task output/input?
"hi ,apanicker-nflx ,can you help me review the https://github.com/Netflix/conductor/pull/496  pull request? thank you"
@cyzhao  Can you review this changes?
@vmg can you take a look at the build issue?
"Hi @cyzhao , when you get a chance can you please review the PR?"
@jvemugunta @cyzhao @v1r3n will it be possible to spend sometime on the PR and suggest if this is the right approach ?
@mstier-nflx can you please take a look at this PR? \r\n\r\nThanks.
@hunterford @mstier-nflx How do I get this merged?
@hunterford Any thoughts on this merge request?
@mstier-nflx or @hunterford : Can you please merge this PR?
Hi @v1r3n @cyzhao \r\n\r\nCan you please review the pull request? \r\n\r\nThank you\r\n\r\n\r\n
@hunterford I resolved the conflicts. Can you please re-approve and merge these changes when you get a chance?\r\n\r\nThanks.
@mstier-nflx or @cyzhao can you please merge this so I can avoid further conflicts?\r\n\r\nI appreciate it.
"@hunterford  @cyzhao @mstier-nflx  any feedbak, thoughts, etc? I have the redux upgrade behind this one done, and I am working on the React 16.4 and Router upgrade along with some elastic dash-boarding behind this and my other pull request."
@pctreddy @cyzhao can you review this?
"@hunterford can I get a review on this one? I have the Redux / Routing / React upgrades almost done, but this is a base for those changes."
"I had a look to the travis log but I am not able to reproduce the error on my machine. `MySQLNonTransientConnectionException` can be thrown for several reasons, any possibility we can increment the `log level on travis`, use a `gradle scan` or add the full stacktrace?\r\n"
"@apanicker-nflx should I change the target branch? The major version would be a good time to put in the React 16+, React Router and Redux upgrades too."
"Hi @gorzell \r\n\r\nDid you look at the class MySQLWorkflowModule I have made changes few weeks back?\r\nIt addresses all of the properties you mentioned. I like your idea of separating MYSQL Configuration from code. However, Consider having  setMaximumPoolSize and setMinimumIdle settings. These are very critical for High Volume applications. \r\n\r\nHow can I test your code? what branch/repo I should pull from?\r\n\r\n\r\n```\r\nHikariDataSource dataSource = new HikariDataSource()"
Can we get this reviewed for a merge?  I too have to maintain this change in a fork\r\n\r\nAlso looks like PR could use a rebase
"Hello, Can someone please review and merge the code?"
@mashurex - Can you review this code? The current code has race conditions and I have addressed all of them.
"> @jvemugunta I incorporated your changes into my previous PR, the only difference is how I've setup the test harness. If you merged in my PR branch to yours I could just close it and we can use this PR to post both of our changes.\r\n\r\nok @mashurex , I will merge your changes into mine so that we work with one code base.\r\nIs all your code in this repo\r\nhttps://github.com/mashurex/conductor/tree/fix/754_mysql_timeout?\r\n "
"@mashurex , Your branch is merged into this PR. Please review and let me know what you think. @mashurex and @picaron - Can we revisit the design of queue_message table? https://github.com/Netflix/dyno-queues/blob/dev/dyno-queues redis/src/main/java/com/netflix/dyno/queues/redis/RedisDynoQueue.java If you look at the push, pop and processUnacks methods - It separates unackTime time value from myQueueShard time value where as we are merging these two into deliver_on column. Can you design our implementation similar to REDIS? We are doing select and updates on queue_message table - This would require locks when selecting and updating data with high volume How about inserts and deletes - This way the code will be clean and runtime with MYSQL may be better. Your thoughts?"
@mashurex @jvemugunta can you confirm that https://github.com/Netflix/conductor/pull/757 can be closed given it is merged into this one? also let us know when this PR is good to go then we will review and merge accordingly.
"Hi @joshlreese , Which branch your  code is running with?\r\n\r\nON DUPLICATE KEY UPDATE would not create a deadlock. \r\n\r\nYou probably are seeing the deadlock because of \r\n\r\nhttps://github.com/Netflix/conductor/blob/2c419cff934959f72bdb48284b433c6d26f52a24/mysql-persistence/src/main/java/com/netflix/conductor/dao/mysql/MySQLQueueDAO.java#L210\r\n\r\nThis is because of Pessimistic we implemented, but later realized this would cause deadlocks under heavy load. With this fix we are going to change as Optimistic lock. This would avoid the dead lock situation.\r\n\r\nIf you can recreate the deadlock, I want to see the behavior. can you run this command\r\nSHOW ENGINE INNODB STATUS \G\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n"
@apanicker-nflx - why would you think this happens on Travis-CI with GITHUB?\r\nI have installed Travis-CI docker image on my local machine and it works with no issues? Do you think if these tests *ServiceTest are running in parallel resulting into some k
@apanicker-nflx - I think the problem is with WorkflowLegacyMigrationTest and WorkflowServiceTest sharing the same TestRunner class resulting into this race condition. I have made WorkflowLegacyMigrationTest as a simple test independent of TestRunner. the build succeeds. Can you look and tell me if you have insight on the rootcause?
"Is the removal of ""SELECT ... FOR UPDATE"" in PEEK_MESSAGES on purpose?  Without it, this causes the occasional duplicate processing of tasks when running multiple instances of conductor.\r\n\r\nI must say that it is not as easy as just add ""FOR UPDATE"" to the select statement, because that ends up essentially locking the whole table if you don't provide an appropriate LIMIT.  The default is to ""LIMIT 10"", and if there are less than 10 records, this will prohibit not only updates to the locked rows, but also other rows as well as inserts to the table as a whole (MySQL 5.7).  I've circumvented this by doing a SELECT COUNT within peekMessages() and using the resulting count instead of the passed in value if it is less.  Still a little bit of a race condition, but better than the alternatives.\r\n\r\nIf there's not a reason, I can submit a patch, or feel free to convert my description into code.\r\n"
"@jvemugunta can you revert format changes, or mark code changes related to the fix?"
"I am using Eclipse as an IDE and I am not sure how the formatting is the changing. Is there a . settings we can use for all developers who are using eclipse. This way the indentation and formatting is consistent for all developers \n\nSent from my iPhone\n\n> On Sep 23, 2018, at 11:33 PM, Charles Zhao <notifications@github.com> wrote:\n> \n> @jvemugunta can you revert format changes, or mark code changes related to the fix?\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
"@cyzhao we also met this problem the task status marked as 'IN_PROGRESS' and not execute anymore, I saw this issue here. So I want ask the question is @jvemugunta applied the changes with two classes change, but I saw only the WorkflowExecutor.java merged to release1.12.3 branch, we met that issue may caused the other class(ServerModel.java) not merged to this release branch?"
"Hey @piokania Thanks for the PR. Couple of questions / concerns: Why is this GuiceContainer injected to SwaggerModule? Also, I see the builds have failed for this PR.\r\n\r\nAs it has been a while, I'm closing this PR for now. But, if you're still interested in merging this, please let me know and I'd be glad to reopen."
@cyzhao Should we record all the exceptions sent from conductor?
"Better yet, all the calls go through `executeWithRetry` method of `RedisDynoQueue` in `dyno-queues-redis` repository. Shall we submit a PR to that repo to include metrics in all exceptions thrown?"
"So, we are currently running this in our testing environment and will push up to production by the end of this week if things look good. Not sure if there is anything additional that I should do in this PR?\r\n\r\nAny other comments? Otherwise, it would be nice to get this code in."
"@kishorebanala any word on being able to patch this into 1.12? I also created another PR to patch this into Conductor 2.0. The pattern is a little different, but I was able to port most of what I wrote here to there. https://github.com/Netflix/conductor/pull/843"
"@bitbier Did you guys meet the timeout problem, when I running my workflow with this REST client, I found there is something weird, each index operation there will be a request to perform set the timeout, but sometimes it's failed, which will caused the workflow index failed then the status of the whole workflow will not synced to ES, please help to take a look, anybody can give suggestion on this problem?You can see below debug log, the workflow failed index to ES seems caused by the ?timeout=1m] failed, I'm just wonder do we need config the timeout from the REST Client config part like:RestClientBuilder builder = RestClient.builder(new HttpHost(""localhost"", 9200)).setRequestConfigCallback(new RestClientBuilder.RequestConfigCallback() { @Override public RequestConfig.Builder customizeRequestConfig(RequestConfig.Builder requestConfigBuilder) {return requestConfigBuilder.setConnectTimeout(5000).setSocketTimeout(60000);}}).setMaxRetryTimeoutMillis(60000);**Debug log:**2343004 [pool-2-thread-1] DEBUG 2018-11-12 16:29:30,554 org.elasticsearch.client.RestClient  - request [PUT https://vpc-listing-workflow-es-dev-34omml7hqotv3uwxuyovolawgm.ap-northeast-2.es.amazonaws.com/conductor/workflow/c7b33834-d04c-4454-a870-0d212fbecb17?timeout=1m] failed2343004 [http-bio-8080-exec-8] DEBUG 2018-11-12 16:29:30,554 com.netflix.conductor.common.utils.RetryUtil  - Attempt # 1, 1 millis sincefirst attempt. Operation: indexWithRetry, description:Indexing workflow: c7b33834-d04c-4454-a870-0d212fbecb172343158 [pool-2-thread-1] DEBUG 2018-11-12 16:29:30,708 org.elasticsearch.client.RestClient  - request [PUT https://vpc-listing-workflow-es-dev-34omml7hqotv3uwxuyovolawgm.ap-northeast-2.es.amazonaws.com/conductor/workflow/c7b33834-d04c-4454-a870-0d212fbecb17?] failed2343158 [http-bio-8080-exec-36] DEBUG 2018-11-12 16:29:30,708 com.netflix.conductor.common.utils.RetryUtil  - Attempt # 3, 6870 millis since first attempt. Operation: indexWithRetry, description:Indexing workflow: c7b33834-d04c-4454-a870-0d212fbecb17"
Can you please close this PR as well? #478
"Hi @davidwadden can you run conductor + dynomite + elasticsearch using docker-compose with the configurations that you provide in this PR? I lost some time trying to run conductor + dynomite + elasticsearch in my machine using the docker-compose after making some changes to it but conductor is much more slower than when I run it without dynomite and elasticsearch in different containers, as I mentioned here: #839.\r\n\r\nYou just need to apply these changes to run everything correctly or have you done other changes?\r\n\r\nThanks!"
@cyzhao Since ES transport client is deprecated in future releases : https://www.elastic.co/guide/en/elasticsearch/client/java-api/master/transport-client.html Is there any plans of merging this / completing this PR ? @davidwadden are you still working on the changes ?
@cyzhao how can I fix the coverage error?

Do you have an example of the configuration and redis deployment you would use with this?
"Question: we are looking to extend the workflow task definition to include a human readable description, for visualisation of the workflow process. Would this validation fail if unknown properties are present? In the example below we add the `description` property, which is not part of the current schema.\r\n\r\nFor example:\r\n\r\n```\r\n tasks: [\r\n        {\r\n            name: ""calculate_feasibility"",\r\n            taskReferenceName: ""calculate_feasibility"",\r\n            description: ""Something human readable goes here, and this is not in the current Netflix schema"",\r\n            type: ""SIMPLE"",\r\n            inputParameters: {\r\n                appId: ""${workflow.input.appId}""\r\n            }\r\n        }\r\n]\r\n```\r\n\r\n"

Would this catch https://github.com/Netflix/conductor/issues/879? Input parameters with spaces in them.
> Would this catch #879? Input parameters with spaces in them.\r\n\r\nDon't cover this case. Will add it in this PR.
Thanks for the PR @davidwadden we tested it and it seems to work. @cyzhao / @davidwadden do we have plans to merge this ? Will be happy to help out if there is additional work required here.
"@haoch This is a great start, but seems out of place. I'm not sure if this PR helps create new Workflow from UI. If so, that's great. But ideally, the flow should be a Create task and workflow button in Metadata section of UI, and a form with all the options, which on submit would register a Workflow definition. If this is not what you've intended to do, can you please describe you plan? Also, I'm closing this for now as it has been a while. Please feel let me know if you're still working on this, and I'd be glad to reopen."
"@kishorebanala as we are using conductor and needs the function for daily operations, could you add a similar feature?"
"hello @cyzhao @apanicker-nflx, apart from the specific implementation of the status listener that we needed to develop here, is it possible to review the possible fixes for some issues I found and added in this pull request?"
"Hello @Ismaley and @cyzhao,\r\nAny news about this feature? Is it still under review?"
"Hello @cyzhao, and @apanicker-nflx. We are using conductor in our company as orchestration engine and we needed support to elasticsearch 6. As discussed in the issue #889, i adapted the es5 module to support es6, and removed es5 support. Could you please review this pull request ?"
"@apanicker-nflx thank you for the quick reply. As discussed in the issue #889 and said by @ahai1980, i thought that only ES6 would be supported in new versions of conductor. If that's not the case, i will rollback ES5 module and do what you suggested. But i have some questions: by standalone ES6 module did you mean a module that is only pluggable at build time? Because in early versions of conductor it was setup on load of application and I don't know how to properly do that. The ES6 client is not compatible with ES5 and I can't have both ES5 and ES6 clients jars in the classpath. Any suggestions ?"
"> Hey @srabenhorst , this is great. But, it would break backwards compatibility for users already using `registerTaskDef`. Instead, this method can be marked deprecated, and another `updateTaskDef` method can be added, with comments asking the users to use `updateTaskDef` hereon.\r\n\r\nIs it better like this? I hope I deprecated it properly.\r\n"
Looks like this is related to this issue #573 \r\n\r\nWe are using conductor in our company as orchestration engine and we were considering building something exactly like @X-Ultra did here (many thanks!) to do some simple stuff during workflow execution. What do you guys think of this? @apanicker-nflx @cyzhao @kishorebanala
"> @huangyiminghappy Thanks for resubmitting the PR. Can you fix the code coverage errors please.\r\n\r\nthank you review. @kishorebanala i can not found the  parametersUtils test case, do not know add the case in which test class,could i add a new test class to cover the uncoverd code?can you help me where i can add the test method?"
@apanicker-nflx Can you review the PR again?
@mstier-nflx and @hunterford I have resolved the conflicts. Could you take a look? Thanks.
I am not seeing a lazy-debug-legacy@0.0.3 in the npm repository.  Where did you find that version?
"I tried other ways, but this seem to be the ideal way the solution works. How about calling it as a COMMAND task if you don't want it to be called it as EVENT_WAIT?"
"> I used the existing implementations of EventQueueProvider and ObservableQueue to add the support for AMQP queues.\r\n> I've used the version 3.7.13 of RabbitMQ server.\r\n> Are you interested ?\r\n> Thanks for all the work you do and you done on Conductor :)\r\n\r\n@mekahell Can you consider exchange and routing key for publishing instead of using a queue name? I would consider the format for sink as amqp:exchange_name:routing_key, but for consumption it would be a queue name in the format exchange_name:queue_name"

Can you please point me to the specification/documentation for this format to specify queue and exchange?\r\nAlso the URI path definition from your format needs a defined queue name. When you deal with exchange and routing key for publishing then you may not care about the queue name and infact you would never bind the code or configuration to a specific queue.
"@jkaipa I've made some changes according to your review. There are 2 types of URI scheme for AMQP queues : - **amqp-queue** for queue - **amqp-exchange** for exchange. You can append parameters to the URI to set the following properties:- ""exchangeType"" : type of exchange topic, fanout, direct,...- ""routingKey"" : the routing key- ""deliveryMode"" : the delivery mode of message to publish- ""durable"" : is queue durable ? true by default- ""exclusive"" : is queue exclusive? false by default- ""autoDelete"" : is auto delete enabled ? false by default- ""maxPriority"" : Enable the priority feature on queue and set the max priority For more details about the query parameters please see the Enum class com.netflix.conductor.contribs.queue.amqp.AMQQueryParameters and the unit tests."
"> @jkaipa I've made some changes according to your review.\r\n> There are 2 types of URI scheme for AMQP queues :\r\n> \r\n> * **amqp-queue** for queue\r\n> * **amqp-exchange** for exchange\r\n> \r\n> You can append parameters to the URI to set the following properties:\r\n> \r\n> * ""exchangeType"" : type of exchange topic, fanout, direct,...\r\n> * ""routingKey"" : the routing key\r\n> * ""deliveryMode"" : the delivery mode of message to publish\r\n> * ""durable"" : is queue durable ? true by default\r\n> * ""exclusive"" : is queue exclusive? false by default\r\n> * ""autoDelete"" : is auto delete enabled ? false by default\r\n> * ""maxPriority"" : Enable the priority feature on queue and set the max priority\r\n> \r\n> For more details about the query parameters please see the Enum class com.netflix.conductor.contribs.queue.amqp.AMQQueryParameters and the unit tests.\r\n\r\nThe next point is about the consumption. Is there a reason to go with basic get vs basic consume? how about doing a basic consume like below? (I didn't add additional params such as prefetchCount etc., for now). Conductor would be running much faster with its task execution. If the messages are getting into rabbit success or failure queue at faster rate, basicConsume might deliver better performance.\r\n\r\n```\r\n\r\n @VisibleForTesting\r\n public void receiveMessages() {\r\n try {\r\n DeliverCallback deliverCallback = (consumerTag, delivery) -> {\r\n Message message = new Message()"
@apanicker-nflx any news here?
"Hey @mekahell, we had to revert this PR as the build have been failing with couple of tests. Do you mind taking a look? https://travis-ci.org/Netflix/conductor/builds/568130006"
"@apanicker-nflx Thanks for the feedback! ... I'll make the changes soon. For the first point of removing the refactoring for`StartWorkflowParameters`. I do agree it doesn't belong here, but honestly, I wasn't able to proceed with the change without doing this refactoring. There were about 10 functions named `startWorkflow` that rely on parameters overloading, each has >5 parameters. It won't be really easy to undo this refactoring now. Does this sound like a good reason for keeping this refactoring in the same merger request?"
@mohelsaka Can you please provide an update on this PR? Thanks
"@apanicker-nflx In which version, this ""Support of Priority"" will be available?"

@apanicker-nflx Could you have a look when you have time?
@andrea11 Thanks for the contribution. The PR looks good as a whole. Can you please also add an integration test to the `test-harness` module in the `AbstractWorkflowServiceTest` class?


"@kishorebanala and @apanicker-nflx, thanks for reviewing this PR. @kishorebanala, I liked your idea! Just to make sure, are you suggesting something like it was done with the elasticsearch modules, whether you can opt which one you're going to install based on the configuration or to port the implementations to the contribs module and leave just the interfaces on the core and server modules? I'll add the documentation once I get the changes done."

"Hello @Ismaley, may you update this PR to resolve conflicts?"
"@Ismaley Hello, do you have any news on this feature?"
"@andrea11 just updating here, I'm close to finish the changes, right now I'm trying to write an integration test case for this feature. Plus, I tried to run conductor on my machine to test this feature and I created a simple workflow with a http task, turns out that the task remains scheduled forever and the workflow never completes. Last version of conductor I tested was 2.11, did anything changed regarding creating workflow or task definitions? Thoughts, @kishorebanala? Tested it both with embedded and external dynomite."
"@Ismaley Not related to the way tasks are executed. Do you by any change have system tasks workers disabled? Or, do you see any errors in your logs when polling for system tasks? [SystemTaskWorkerCoordinator](https://github.com/Netflix/conductor/blob/master/core/src/main/java/com/netflix/conductor/core/execution/tasks/SystemTaskWorkerCoordinator.java) is the entry point that polls and executed system tasks."
"Hi @Ismaley, \r\nSorry I was busy recently. I read that you would like to improve the documentation later. But maybe it could be useful even for reviewer to better understand how this functionality works ðŸ˜„ \r\nAnyway, thanks a lot for your efforts to complete this PR. Could you try to fix your commit with the comments provided by @apanicker-nflx ?\r\n\r\n\r\n"
"> I do not see a version 0.0.3 in NPM. where are you getting this version?\r\n\r\n@mstier-nflx so I think what's going on here is that if you go here directly to the url, you get the download you want:\r\nhttps://registry.npmjs.org/lazy-debug/-/lazy-debug-0.0.3.tgz\r\n\r\nBut really, I think that's the code from `lazy-debug`, not `lazy-debug-legacy`. \r\n\r\nThis this fixes the build for right now, so I think we should get this merged in so that people are not blocked from building/using Conductor. \r\n\r\nIt seems like some larger investigation should go into why we are even depending on this package really, or at least investigate upgrading `debug-fabulous`, which is what depends on this."
"> I see that we have taken an approach in which we have defined the task that DO_WHILE needs to loop over before the actual DO_WHILE task which is similar to a JOIN construct.\r\n> \r\n> Can you please help me understand why this was chosen over a FORK like semantics in which the loop tasks could have been defined inside the task?\r\n> \r\n> I believe defining the do-while like fork would make more sense because loop-body should be inside the loop def.\r\n> \r\n> Thoughts?\r\n\r\nHi, I tried returning loopOver tasks in getMappedTask for do while task but the issue is in second time iteration. how we are going to iterate again. Also as far as this PR is concern my worry is I am calling scheduleTask from execute method, that two are different concern. Also if we are making do while like fork then we also need a way to handle input output for each loopOver task. Let me try once again."
"Hello,\r\nNice feature ðŸ˜„ Could you please provide more info on how this task should be used? (maybe updating the documentation)"

"Hello @manan164,\r\nany news on this PR? I was also thinking, that it could be useful to have a parameter to set a delay between loop. What do you think?"
Hi @apanicker-nflx  Any update on this thread?
"Hi, @apanicker-nflx Please let me know the updates on this. Should I write more documentation on how to use this?"
"Hello @kishorebanala @apanicker-nflx, do you plan to review this PR soon?"
"> Hello @kishorebanala @apanicker-nflx, do you plan to review this PR soon?\r\n\r\nHi, @andrea11\r\n Did you find the documentation useful? Are you using this?"
"Hi @manan164, I did not use this task, but I am very interested in it. I looked at the documentation and it seems clear :) \r\nIs there any limitation to the tasks that can be used inside this task?"

"Thanks @manan164 for PR.\r\n\r\n@apanicker-nflx Could you please share in which version, you are planning to release this change?"
Do we need integration test with happy and sad cases?
@apanicker-nflx  I have updated the PR with the changes as per PR comments. Can you pls take another look?
@kishorebanala @apanicker-nflx Can you please review this pull request?
@kishorebanala I will raise another PR for ES 5 eventually. Stumped right now. Could you please merge the current one?
"Hey @bharadwajrembar, are you still planning to work on this feature? We still feel this would be an important addition to ES modules."

"Thanks for submitting this!\r\n\r\n> Existing users with imports on conductor/* will still need to install the source code to the $GOPATH, but until they migrate their imports, they won't be able to update to using the go modules feature.\r\n\r\nCan you expand on this? I _think_ I get you, but I'd like to make sure.\r\n\r\nAlso, how does this PR affect the instructions provided in the [README](https://github.com/Netflix/conductor/blob/master/client/go/README.md)?"
"> Can you expand on this? I _think_ I get you, but I'd like to make sure.Absolutely - if a user of this library has already run the `install.sh` script, and has the following in their own code:```goimport""conductor""...conductorClient:=conductor.NewConductorHttpClient(""http://localhost:8080"")```When they upgrade to this new version of the library, they need to revise this import to:```goimport ""github.com/netflix/conductor/client/go""```Additionally, if they are not using go modules, the source code will need to be moved to `$GOPATH/github.com/netflix/conductor/client/go`> Also, how does this PR affect the instructions provided in the [README](https://github.com/Netflix/conductor/blob/master/client/go/README.md)? Ah, good point.  These instructions would need revision; should I add this to the PR?"
"@jvemugunta @mashurex Could y'all take a look at this? Or if you are no longer able to contribute, can you at least respond here so that we're aware if you're looking at this? Thanks."
"@apanicker-nflx @s50600822 I reviewed this and everything is working against MySQL 5.7 as well as the tests passing. One other thought, if we're breaking the migration hash chain for this, couldn't we just change the V1 migration to include this column (as well as the V2 changes)? It would seem cleaner going forward."
I having this issue with latest released jar : https://repo1.maven.org/maven2/com/netflix/conductor/conductor-server/2.22.2/\r\n\r\nIs there any work-around?\r\n
Can this fix get merged?
@apanicker-nflx Would you mind merging this PR if that's fine by you?
"Hi @s50600822. There are some failing tests in `mysql-persistence` because the thrown exception of `withTransaction()` has changed from `ApplicationException` to `RuntimeException`. As far as I understand, some code can be broken because of that as there are a couple of `catch (ApplicationException e)` in the codebase.\r\n\r\nA quick fix that I see here is to update the method `retryOnException()` to re-throw the original exception depending on the configuration (or even to create a new method). what do you think?"
@ggrekhov what about the test itself ? I think if it perform insert twice and end up getting an Exception does it need to be ApplicationException?

Are you going to merge it anytime soon?
ping?
@goldibex Are you available to continue working on this PR?
"Hey @choubisat, Are you still considering working on this feature?"
"Hey guys, this system task will help simplify our workflows very much. Are you considering continuing to develop it? (@choubisat , @kishorebanala , @apanicker-nflx )\r\n\r\nBy the way, suggesting to limit this to strings only (which in the worst case can be serialized/deserialized to/from JSON) and the max length can be set in the config with default of 512 characters."
"@elisherer Since @choubisat does not seem to be active any longer, would you want to take up and continue this development? Please let us know, if you have a few cycles to spare for this."
"Hello @apanicker-nflx, Could you kindly please review this change? Thanks!"
"Hi @apanicker-nflx, what we can do here is have all indexing workflow operations should be sync. Also, we should minimize the number of indexing workflow calls. I think we have discussed this in other [thread](https://github.com/Netflix/conductor/issues/1243#issuecomment-522809341) But still, I feel the same problem will be there with the task also. \r\nCan you please elaborate on how you are trying to solve this by ScheduledThreadPoolExecutor. By using that we only ensure that tasks will be scheduled after a particular interval. Here what we lack is ordering guarantee. \r\nhow we are trying to solve this is, publish all index operations to Kafka which will give ordering guarantee. And consume from Kafka. I have raised a sample [kafka-persistance](https://github.com/Netflix/conductor/pull/1337)  also. The only thing I want to know in that is how should we write consumers. Please go through that once. Again this is a niche optimisation and not all people will be interested for this. For those who are not interested we can use sync indexing only in case of a workflow. So basically I would say the flag you have used for this will separate out high throughput and low throughput scenario.\r\nViews?"
"Thanks for your suggestions and pointers.\r\n\r\n> what we can do here is have all indexing workflow operations should be sync. Also, we should minimize the number of indexing workflow calls. I think we have discussed this in other [thread](https://github.com/Netflix/conductor/issues/1243#issuecomment-522809341) But still, I feel the same problem will be there with the task also.\r\n\r\nIn-sync indexing would not be ideal since this keeps elasticsearch in the request path, but users can opt to do that if the throughputs in their use-case is quite low. This can be controlled via configuration. \r\n\r\n> Can you please elaborate on how you are trying to solve this by ScheduledThreadPoolExecutor. By using that we only ensure that tasks will be scheduled after a particular interval. Here what we lack is ordering guarantee.\r\n\r\nThis is correct, by delaying the update operation by a fixed interval. This does not guarantee ordering but greatly reduces the probability of this inconsistency.\r\n\r\n> how we are trying to solve this is, publish all index operations to Kafka which will give ordering guarantee. And consume from Kafka. I have raised a sample [kafka-persistance](https://github.com/Netflix/conductor/pull/1337) also. The only thing I want to know in that is how should we write consumers. Please go through that once. Again this is a niche optimisation and not all people will be interested for this. For those who are not interested we can use sync indexing only in case of a workflow. So basically I would say the flag you have used for this will separate out high throughput and low throughput scenario.\r\n> Views?\r\n\r\nWe will be reviewing the Kafka-persistence PR soon. Eventually, in the long term, we would also be looking to move to Kafka as an intermediate layer for indexing. \r\n\r\n> The only thing I want to know in that is how should we write consumers.\r\n\r\nHave you considered writing a Flink job to consume from the Kafka topic? This job could handle de-duping and merging before indexing the document to elasticsearch.\r\n"

"Hey @ggrekhov, Are you still considering working on this feature?"
"Hi @kishorebanala. To be honest I didn't get why my solution is wrong.\r\n\r\n@mashurex, you say: `this is going to lead to data consistency issues and (probably) the same task being handled twice`. I'm looking at the code now and I cannot notice a way how a message can be handled twice when actually it can be popped only by 1 worker. What consistency issues do you mean?\r\n\r\nI admit that my implementation brings a bit new behavior of `pop()` - sometimes it can return less messages than a client asks for. I'm not sure how critical it is for the whole design - you know it much better than me. But it seems not critical to me - with my knowledge of the system I couldn't notice any bad impact of it, and I see the positive impact of the change in general as the messages don't get stuck in the queue forever.\r\n\r\nBy the way, this PR has been deployed in our production instance for several months already - we didn't experience any inconsistency issues in our workflows."
"@apanicker-nflx @kishorebanala @ggrekhov @mashurex Could y'all follow up with @ggrekhov 's comment? It looks like the Postgres one was approved and merged: https://github.com/Netflix/conductor/pull/1741 I'm not sure what the difference would be between Postgres and Mysql implementation where one would be ok, but other not in this instance."
"> @checkingchecks I'll look into this\r\n\r\nhi, any updates? so I initially created the same schema and tables via script to set it all up before running the server but when I ran the server it still prompts the flyway migration exception even though it has the similar tables and indexes before running."
"> @checkingchecks While flyaway has an option for baselineOnMigrate, conductor does not. I created a branch that adds this configuration option to conductor. To test this, create a new build from my branch:\r\n> \r\n> ```\r\n> git clone -b baseline-on-migrate https://github.com/mactaggart/conductor.git\r\n> cd conductor\r\n> ./gradlew build -x test\r\n> ```\r\n> \r\n> In your conductor config, set:\r\n> \r\n> `baseline.on.migrate=true`\r\n> \r\n> If this works in your environment, I can submit a PR. Hope this helps.\r\n\r\nThanks. Pls bear with me as i'm new to this. I'm running `java -jar <server>.jar <server>.properties`. When applying `baseline.on.migrate` on the properties file, it seems the change is not reflected. I think it's because this change you committed is only applicable to the UI not the server and my properties file is accessing the fields available to the server. Am I doing things correctly?"
"Hi @shivambansal2222 , I have an overall look over the PR.\r\nPlease answer the following questions,\r\n1) We are changing the way task keys are generated. [Key Definition](https://github.com/Netflix/conductor/blob/master/core/src/main/java/com/netflix/conductor/dao/ExecutionDAO.java#L62) says we should use only ref name and retryCount. So if we are changing the way keys are getting generate then we should update the method documentation in the interface. Another thing is, currently we have CassandraExecutionDAO and MySQLExecutionDAO. We might need to change there. Also in the future, if we are going to have another implementation we might need to change there. I was thinking to change in case of do while but later dropped the idea considering future maintenance.\r\n2) Instead of changing all task mappers, we can change the way tasks are getting scheduled. Please explore how we are doing this in case of [do-while](https://github.com/Netflix/conductor/pull/1169#discussion_r327177275) The changes will be very minimal because we already have changed the way task keys are getting populated. In [GoToTaskMapper](https://github.com/Netflix/conductor/pull/1373/files#diff-02cefa0c6fb9c2346a4e8459eb37329cR101) update the iteration of the gototask and when it gets completed in [DeciderService](https://github.com/Netflix/conductor/blob/master/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java#L192) automatically it will update the iterationCount of all subsequent tasks.\r\n3) How are we handling the case of gotoTask will be subworkflow?\r\n"
"Hi @shivambansal2222,\r\nI would like to understand if in the workflow execution we will find all the execution of a same task (in your example LeReview), or only the last one?\r\nIf all of them are stored, will they have the same taskReferenceName (and different retryCount) ?\r\nIf yes, how can you distinguish between a fail of the task and an execution demanded by a GOTO task?\r\nIf no, how can you select the last execution via taskReferenceName as variable inside the workflow?"

"Hi @manan164, Is there a roadmap as to which release will this PR be merged to?"
"Hi @shivambansal2222, we would also like to use GOTO functionality. Is this work still relevant?"
I've optimized the test case. Do you have time to review it? @apanicker-nflx
Does this *require* an ownerEmail now on a task?

@manan164 Is the work for this PR still active?
"@mudit3774 this is important for us. @kishorebanala , when this is supposed to go, live?"

"Hey @DemisB, are you still planning to work on this feature?"
@apanicker-nflx and @mstier-nflx I was wondering if we could get this merged soon?
So how to create a new http task with new configuration? Can you give me an example? Since with previous configuration my http tasks are always in running state
"@oanaema Please provide a description as to why do you think these fields need to be part of the copy method in the Task object? Currently, the main purpose of the `copy` method is to help copy over required fields during retry operation during which the startTime, scheduledTime, endTime should not be copied over."
"Hello @apanicker-nflx  ,\r\n\r\nThis PR was created to fix the issue we have on the Task level with some of the fields that are missing from copy method. We should be able to get scheduledTime, startTime and endTime parameters from WorkflowTasks in a workflow. Instead of getting such dates, we are always getting 0 as a value, because in the copy method multiple fields are reset.\r\n\r\nIs the copy method only used during the retry operation? I've seen that on a usual task execution on **populateWorkflowAndTaskData** from **DeciderService** the _copy task method_ is triggered by _the copy workflow method_ and the startTime, scheduledTime, endTime are reset.\r\n\r\nCan you please advice what we should do in this case, since startTime, scheduledTime, endTime are not available after task execution?\r\n"
"Hello,\r\nThis PR was created to fix the issue we have on the Task level with some of the fields that are missing from copy method.  We should be able to get scheduledTime, startTime and endTime parameters from WorkflowTasks in a workflow. Instead of getting such dates, we are always getting 0 as a value, because in the copy method multiple fields are reset.\r\nFor instance I saw that seq and startTime fields need to be reset because they are taken into account in some business logic.\r\nCan you please advice what we should do in this case, since we cannot touch startTime because we are breaking other logic?"
"Thanks for the context. This is a valid bug and is indeed an edge-case. Looking at the linked code, I feel that it would be easier to move```executionDAOFacade.updateWorkflow(workflow);```  after line 721. This would prevent having to add a dependency to IndexDAO in the WorkflowExecutor. Would need to ensure that the workflow object is updated with the updated tasks (new status). Also, we are looking into indexing task documents during updateTask to enable task level searching for in progress workflows. Once this is implemented, it would solve for this issue as well. Thoughts?"
"To me it looks like either of your solutions is better than doing a one-off index of the task when needed as I did but I admit that I don't know the reasoning behind not putting the indexDAO.indexTask() call in updateTask() in the first place. Can you explain? I'm sure there is a reason and I don't want to start changing code that is integral to the functioning of Conductor unless I understand all the implications.\r\n\r\nThe problem with not calling indexDAO.indexTask() during the updateTask() method from my perspective is the /tasks/search endpoint. If you use that endpoint and your freeText is, for example, status:CANCELED then you get inaccurate results because that endpoint does not find the CANCELED tasks as ElasticSearch is used to do the initial query. I think the same issue surfaces for other statuses but I haven't yet looked into it further."
I think the reason that updateWorkflow() is called before the updating of the tasks (during terminateWorkflow()) is because we don't want to have a task update exception thwart the updating of the workflow. Please correct me if you disagree. I therefore like your second solution of adding a call to indexDAO.indexTask() in the updateTask() method. That will create a ton more volume for ElasticSearch but I would rather have both ElasticSearch and the database in sync with more volume than worry about volume.\r\n\r\nThe question is: are there situations where adding something to ElasticSearch (where it currently is not added) would cause a problem for another use case? I don't know the answer to that...
"> Are there situations where adding something to ElasticSearch (where it currently is not added) would cause a problem for another use case?\r\n\r\nYour observation is correct that this will create a large volume of requests to ES and in case of synchronous indexing, this can introduce a latency cost. However, I agree that it is better to have both Elasticsearch and primary datastore in sync in such situations. \r\n\r\n>  I therefore like your second solution of adding a call to indexDAO.indexTask() in the updateTask() method.\r\n\r\nThis change can be added such that it is performed only in cases where async indexing is not being used. Otherwise with the current in-memory queue async indexing model, there is a high possibility of indexing requests being dropped.MESSAGE 213 > This change can be added such that it is performed only in cases where async indexing is not being used. Otherwise with the current in-memory queue async indexing model, there is a high possibility of indexing requests being dropped. So, if I add this code to ExecutionDAOFacade.updateTask(Task task): if(!config.enableAsyncIndexing()) {indexDAO.indexTask(task);}`then I would need to bracket every existing call to indexDAO.indexTask() with this:if(config.enableAsyncIndexing()) {indexDAO.indexTask(task);}`Is that acceptable to you? It could get messy I am thinking."
"> This change can be added such that it is performed only in cases where async indexing is not being used. Otherwise with the current in-memory queue async indexing model, there is a high possibility of indexing requests being dropped. So, if I add this code to ExecutionDAOFacade.updateTask(Task task):` if(!config.enableAsyncIndexing()) {indexDAO.indexTask(task);}`then I would need to bracket every existing call to indexDAO.indexTask() with this:`if(config.enableAsyncIndexing()) {indexDAO.indexTask(task);}`Is that acceptable to you? It could get messy I am thinking."
"@rickfish, @apanicker-nflx - Is this issue fixed? I don't see relevant code changes in the new pull request is #1526."
@mactaggart @jvemugunta @gorzell Can you help review this please?
"A quick question as a new user to the current state of things with the /ack endpoint.\r\nI'm seeing the following odd behaviors right now:\r\n- /ack endpoint always returns false\r\n- /poll endpoint returns the same task more than once when called concurrently from different worker threads (from C# client for example)\r\n- Python client calls ack and only proceeds if ack returns true, so it never perform any actions\r\n- C# client runs the ack endpoint but always proceeds regardless of the ack result.\r\n\r\nSo in other words - right now the C# client ends up processing the task more than once and the python client ends up not processing anything at all.\r\n\r\nSince the /ack endpoint is deprecated, shouldn't the /poll endpoint always only return the task exactly once?\r\nAnd shouldn't /ack always return true for backwards compatibility with clients like the python client that will only proceed if it returns true?\r\n"
when will this feature be released?ðŸ˜„
@shashi1996 Are you actively working on this PR?’
How do I know what the failure was? There doesn't seem to be a way for me to see what the errors were. It built fine for me.
@ritu-p Have you had a chance to take a look at the comment here about basicConsume? https://github.com/Netflix/conductor/pull/1063#issuecomment-477244947

"@ritu-p Looks good to me. Please address the above comment on `setUnackTimeout`, we should be good to go. Thanks for your contribution ðŸ‘ \r\n\r\n@jkaipa Do you have anything else to add?"
"Hi @ritu-p @mekahell \r\nI have been using this ampq feature and i found an issue declaring an amqp queue in an event handler.\r\nAs part of my workflow definition, I created an event-handler to complete a WAIT task and set the event queue to be ""amqp:some_queue_name"". After starting a workflow i noticed that after a message was sent to this queue, the message was consumed but the event-handler action was not executed.\r\nAfter debugging, i found out that after the message is received, conductor is not able to find the event-handler because internally it is stored as ""amqp_queue:some_queue_name"".Since the queue type strings are not the same no handler is found and no action is executed. (BTW if i use amqp_exchange it works).\r\nI took a look at the code changes in the PR and i saw that the StringMapkey ""amqp_queue""  was changed to ""amqp"". \r\nIs there any workaround for this issue? is it possible to rename the StringMapKey back to ""amqp_queue"".\r\nThanks"
"Actually, after looking at it further - maybe PR #1658 is a better, cleaner solution than mine. I am thinking about closing this PR. Thoughts?"
Sorry for the multiple comments. I just tested the PR #1658 change and it doesn't handle terminating the subworkflow if there is one. So I am stuck trying to figure out what that PR does that mine does not. \r\n\r\n@kishorebanala can you elaborate? do we need both PR's? I don't know what mine is missing that causes yours to be needed?
"@kishorebanala Your use case is opposite of mine. If the parent workflow has a terminate task and it has a sub-workflow, that sub-workflow is not handled properly, i.e. tasks in it are still SCHEDULED. I am going to attach a sub-workflow (SIO_ETD_TERMINATE_SUBWF) and a parent workflow (SIO_ETD_TERMINATE_WF). If you start the parent workflow, then complete the 'basicJava0' task you will see the results. My change takes care of handling the sub-workflow, not sure if it is the best solution but it works. LMK if you see differently and we will compare notes. Actually, what is the best way to upload JSON files? I tried to attach and I guess you can only attach images? Just tried a .tar file as well as .zip as well as multiple .txt files and got this error in all cases:Something went really wrong, and we can't process that file. Try again.Can I email them to you? Basically, the sub-workflow just contains one WAIT task."
"Is this ever going to be merged? This is the second time, while waiting for it to be merged, some other change came in and made me do everything all over because it changed the underlying code. If it is going to be merged i will make my changes again. If not, please let me know so i don't have to do it again. I do believe this is a necessary change."
"Hi @kensou97 ,\r\nReally nice work. Even we are facing this issue in our environment.\r\nHave you tried considering [WorkflowSweeper](https://github.com/Netflix/conductor/blob/master/core/src/main/java/com/netflix/conductor/core/execution/WorkflowSweeper.java)?\r\nIt is not helpful for use because while doing redis.pop we are facing [issue](https://github.com/Netflix/conductor/issues/1595).\r\nAlso, I feel in case of the environment having short-lived workflows ~ seconds and long-lived workflows ~days, this approach will clean both together. Instead, I feel we should add the variable **workflow.cleaner.expire.seconds** in the workflow definition   \r\n@mudit3774 . This is important for us."



This PR seems to undo the work done in #1280. @s50600822 Can you please comment on these changes?
"> This PR seems to undo the work done in #1280. @s50600822 Can you please comment on these changes?\r\n\r\nOne small difference, i just fixed it by removing 'IF NOT EXISTS' syntax. Mysql DDL can't support 'IF NOT EXISTS' syntax, but it works fine for miradb, and the syntax for #1280 is also for miradb."
"> > This PR seems to undo the work done in #1280. @s50600822 Can you please comment on these changes?\r\n> \r\n> One small difference, i just fixed it by removing 'IF NOT EXISTS' syntax. Mysql DDL can't support 'IF NOT EXISTS' syntax, but it works fine for miradb, and the syntax for #1280 is also for miradb.\r\n\r\noh, why part of my syntax is for miradb only ? Also migration script need to be idempotent so you can't just remove `if exists`."
"Hey @kishorebanala, when do you think we can get this in ?"
"Hey @apanicker-nflx, @kishorebanala \r\n\r\nIs there anything else I can do to get this PR merged ?\r\n\r\nBR, Maros"

@manan164 @rickfish Are we good to merge here?
"This would be a difficult test case to add as it involves having one of the loopover SIMPLE tasks time out and then polling and completing that task only after it has timed out the first time in the first iteration. Do you think it is worth that? Since it is a bug fix, wouldn't the fact that it doesn't break the existing do-while test cases be enough?"
"@apanicker-nflx thank you. If I wanted to attach the workflow/subworkflow metadata to this PR so you know the specific scenario I use to test this issue, how would I do that? I have tried to use the 'Attach files by dragging : dropping, selecting or pasting them' link but it always gives me an error."
"So that issue ( #1696 )is all about the UI, right? The DO_WHILE task is working as expected - just not being displayed on the UI, right?"
@apanicker-nflx - Is this issue fixed and merged to master? I am also seeing this issue.  I merged the changes from Netflix master on 01-Sep-2020.\r\n
@tjasko Have you added these changes in your code base?
"I tried reproducing the issue with the DECISION task in our test environment and am unable to do so. Can you provide some details about your setup - persistence, queue, lock implementation etc. ? Thank you."
"Hey @mdepak, Just to confirm, are the `workflow_execution` and `workflow_completed `'s count metrics being compared at same cadence? Say per second?"
@apanicker-nflx Can you please review this? This PR is expected to solve problems related to a couple of use cases in archiving workflows. Thanks for your help!
"@kishorebanala  thx, copying my reply> Hey @kishorebanala , thx for the review. The reason for the above is that there is only a NoopLocking strategy utilized by default (in ExecutionLockService). Correct ?>> Which means that the solution I proposed still requires a real locking strategy. However it would be sufficient to have a localOnly locking strategy (something based on pure Java semaphore) that does not require persistence... As long as I use the localOnly distribution strategy with it.>> What I will do is:>> - Add a localOnly locking provider (that can handle locking inside a single node)> - Update the docs>> What do you think ? I didn't realize the default locking is implemented by NoopLock... UPDATE: I have added the LocalOnlyLocking provider... which should solve the race condition in a single node or in a cluster node with localOnly sharding for dyno queues. Also I think a LocalOnlyLocking provider could be used as the default instead of Noop ..."
@kishorebanala rebased and fixed the comments. \r\n\r\nOne additional question: Should we want make the LocalOnlyLock default ? Instead of Noop ?

"Hi @kishorebanala, any update on the review?"

@mactaggart Can you please help review this PR? Thanks\r\n
"@ritu-p \r\nHi, i opened this PR for the issue we talked about, when do you think it will be merged?\r\nThanks"
"Hey @ritu-p , being an active contributor to AMQP module, does this PR looks good to you?"
@apanicker-nflx Added tests. Do you think it is better to move out `com.netflix.conductor.server.resources.HealthCheckResource` from `jersey` module into a dedicated module ?
"@apanicker-nflx Thank you for review. There is an issue where the execution history is not automatically cleared after executing the current eventExecution. Is there any way to improve it? I'm trying to develop eventExecution History Delete api, so please check if there's any other way."
"@kishorebanala Oh, nice. It is much cleaner.\r\n\r\nSo does this mean my PR can get merged?"
@kishorebanala I have added a test case for this. *Please* merge this into the next release as I am having to constantly do special merges so that my code doesn't get lost. Unfortunately I don't know how to run these spock tests. How do I run them to test locally?
"@apanicker-nflx , Hi, can this be merged into next version?"
@mactaggart @mashurex Can you please help with reviewing this PR? Thanks
@ritu-p Could you please help with reviewing this PR? Thanks
@apanicker-nflx Has the above been merged to main branch too ? How to figure out if this has been merged to main branch?
@alex-fu Thanks for the contribution. Can you please also add an integration test for this [here](https://github.com/Netflix/conductor/blob/master/test-harness/src/test/groovy/com/netflix/counductor/integration/test/DoWhileSpec.groovy). Could you also add an integration test which would handle a failure and automated retry in one of the forked branches within the do_while? @manan164 We would appreciate it if you could help with reviewing this PR.
"Hi ,\r\n I have embedded the DO_WHILE in a decision task and I am facing a similar issue where the task outside the loop task is getting executed.Any timeline by which this PR will be merged?"
@alex-fu Are you available to continue working on this PR? Thanks
"@mactaggart @rickfish Can you please help with reviewing this PR? Also, do you think a similar change would be needed in the mysql-persistence module?"
"@apanicker-nflx I don't see anything Postgres specific here, so we'll need to update the MySQL code too. As @rickfish mentioned, the Postgres module is based on the existing MySQL implementation, with minor pg-specific differences between them. I had originally submitted a PR that extracted common code between MySQL/Postgres into a sql-persistence module. Perhaps this approach could be revisited since it would cut down on duplicate logic?"
Don't embedded task definition already accomplishes that?
"@elisherer Looks good to me. Can you also add an integration test that verifies this task execution end-to-end please? We've been moving towards Spock based integration tests, and here's one example to get started: https://github.com/Netflix/conductor/blob/master/test-harness/src/test/groovy/com/netflix/counductor/integration/test/DecisionTaskSpec.groovy"

"> @heinrichcohn @elisherer Thank you for taking over this feature.> > I would love to know your thoughts about adding constraints to prevent misuse of this task. So we actually talked about it, seeing your comment on the last PR, and I was thinking that every user of this product will surely begin by going to the documentation. So that's why I added a warning to the docs: ```md !!!warning Use variable values with caution for payload size. Do not use large payload since these values are not externalized to the [external payload storage](../externalpayloadstorage).```I think no matter what the prevention measure will be, it might cause more bad behavior than good. Since if we put limits on the variables size (we need to check it on every step, because it gets changed), the limits can go over size of a single value. limit on the amount of variables. And considering edge cases; what happens when a limit is changed (for the worst) and there are workflows that go over the limit? If at all, we could plan to move the variables values to the external storage as well but that defeats the purpose. It suppose to be simple small values to help with the orchestration. for us it is useful in failure workflow to understand what have been done already to setup the cancellation."
"Hey @elisherer & @heinrichcohn, thanks for picking up this long awaited feature.\r\n\r\nWhile documentation definitely helps, we could still run into a situation where setVariables is called enough number of times, knowingly or accidentally to become a large payload blob. This could in turn cause unforeseen issues in Persistence layer, for eg., wide rows in Cassandra, which we'll have limited control over.\r\n\r\nHow about checking the variables hashmap size in SetVariable's `execute` method, everytime this task is executed? I.e We shall limit max size to a configurable value defaulting to 256KB, and reject any updates to this hashmap over this limit by failing the task."
"OK, should we add that check to the LAMBDA task as well? (Since it will be possible to set variables from there too)"
"Hi @mdepak , \r\nThanks for pointing out. \r\nAre you using clustered redis?\r\nBut for the happy case also we see that the message is not removed from .MESSAGE.HTTP even after successful execution. Messages get piled up in high throughput scenario. This is the same behaviour for all other queues also."
"@manan164 We use the Redis cluster for our deployment. `HTTP` is an async system task and they are polled also polled and executed using SystemTaskExecutor and hence it is applicable for HTTP system task as well leading to a pile-up of messages in `*.MESSAGE.HTTP` hash. When the task is polled by the task workers' clients, it is acknowledged by the client and thus corresponding message payloads are removed. In the deprecated `WorkflowTaskCoordinator` the tasks are acknowledged once the task is received. However, in the `TaskRunnerConfigurer` once the task is polled it is not acknowledged and that could lead to a similar problem related to non-system tasks with RedisDynoQueues. @apanicker-nflx  Can you please shed some light on this problem with respect to the new `TaskRunnerConfigurer` client?"
@mdepak +1. Can you also add this to es6-persistence module to keep both the modules consistent please?
@apanicker-nflx my build failed because LoggingMetricsModuleTest verify() did not pass its test. This has nothing to do with my change as far as I can tell. What should I do?
@mactaggart @mashurex Could you please help with reviewing this pull request? Thanks

"@apanicker-nflx Could you please review my additions? I would also like to add another implementation for the `SemaphoreDAO` that implements a ""fair semaphore"" ([read more](https://redislabs.com/ebook/part-2-core-concepts/chapter-6-application-components-in-redis/6-3-counting-semaphores/6-3-2-fair-semaphores/)) for when setting up Conductor in HA and the clocks on different nodes Conductor is running on are not synchronized and I'm unsure of how to get an instance of the configuration here https://github.com/Netflix/conductor/blob/d4c550f38020ba58b312cf2299361af294ebd3f0/redis-persistence/src/main/java/com/netflix/conductor/dao/RedisWorkflowModule.java#L31-L36 to make this configurable by the user ([in my repo](https://github.com/TwoUnderscorez/conductor/blob/8dc12c76c4f07f0d27c1a5574c96f48b5453535f/redis-persistence/src/main/java/com/netflix/conductor/dao/RedisWorkflowModule.java#L42)). I'll be glad if you could point me in the right direction because this is basically my first time writing anything in Java."
@mashurex @jvemugunta @demichej Could somebody please review this?\r\nThanks!
"Hey @TwoUnderscorez, Can you provide more details about how this ties together with [Task concurrent execution limits ](https://netflix.github.io/conductor/configuration/taskdef/#task-concurrent-execution-limits) please?"
"> @kishorebanala I'm not entirely sure what you mean by how it ties together, but the order of checks in `exceedsInProgressLiint` are as follows:\r\n> \r\n> 1. `TaskDef` concurrent execution limit\r\n> 2. `WorkflowTask` execution limit (what I have added)\r\n> 3. `TaskDef`rate limit check\r\n>    Checks 1 and 2 are completely separate checks.\r\n\r\n@TwoUnderscorez Given that Conductor already provides Task Concurrent execution limits and Task rate limits which is currently in use, how does this new addition fit into to the existing terminology? How can a new user discern between all the concurrency limit constructs available?\r\n\r\nCan you provide a concrete example when the existing concurrency limits wouldn't be helpful, and what additional use cases this new feature would help with please?"
@kishorebanala Any update here? Thanks.
Hey @mashurex @jvemugunta Can you help review these MySQL / Postgres module changes please?
@demichej @jvemugunta Can you review this PR? Thanks.
Thank you for the contribution.\r\n\r\n@rickfish @mactaggart @mashurex Could you please help with reviewing this PR? Thank you.
"I have a general question on the scope of the commit. If this is around setting up Flyway to do baseline migrations (which I think is a fantastic idea), why are there incoming changes to DAO classes and tests?"

@Yingsheng-eroad is this still valid?
@rickfish Can you please review this?
"@marosmars, this looks good and I am glad you are using the lock/share attributes. I wanted to do that but it is in the guts of the queue dao. we have so much volume and so many polling operations that I am a little scared to introduce it into high-volume environments where we might miss race conditions and get killed in production. In any case, it looks good on the surface but I will have to dig into it heavily and actually deploy to one of our lower environments that has significant volume. I can't do that until after next week because we are all working on a production deployment on the 13th of the month. One question: why the double query for LOCK_TASKS in the processUnacks methods?"
"@rickfish You can use the PerformanceTest (https://github.com/Netflix/conductor/pull/1940/files#diff-8a372fc5d838b1a09cac3814bb9cb8df1819e64b726eb2cd2988743b199b35f8) in this PR to stress test the Queue Dao. It is not production env, but it can simulate a lot of load with multiple producers/consumers and thus approximate your production env. I was using that while developing this PR. The test by default spawns 4 producer threads, 8 consumer threads (workers) and expects a set number of messages to be pushed into the queue and successfully processed. In addition, there's a few threads invoking queueDetail() and a few additional threads invoking processUnacks() to put additional load on the dao. The test is a unit test, but expects a real PSQL to be deployed manually on the host. In addition to the attached performance test (testing just the Queue Dao) I was running a performance test executing workflows against a full conductor + psql + 8 worker nodes setup. This external test also behaved well and the performance was higher with this PR applied. So I totally understand your concerns, but the testing mentioned above should increase confidence in this PR a bit Note: I was actually running into problems in the queue dao without this PR when executing that performance test ... e.g. https://github.com/Netflix/conductor/pull/1940/files#diff-fab744a4a59813bc19b455dbc4f34e34e3657655dde025e0177f9621dfca72f4 > One question: why the double query for LOCK_TASKS in the processUnacks methods? That's a mistake, thanks for pointing it out. Will remove the double query."
@rickfish thank you for review and testing. @apanicker-nflx can we get this in ?
@rickfish Does this change fix the issue #1806?
@mdepak Can you please pick this back up and drive to completion as it seems to be affecting other users as well? Thanks.
"@apanicker-nflx  The intent of this pull request is to ensure that the default behavior is maintained before my previous changes (https://github.com/Netflix/conductor/pull/1748) of introducing Execuution scheudler. The following version of Obervable.interval() method was invoked earlier from the ObservableQueue implementations and it is using compuation scheudler. ```public static Observable<Long> interval(long initialDelay, long period, TimeUnit unit) {return interval(initialDelay, period, unit, Schedulers.computation());}```With this PR, when the config (`Configuration#getEventSchedulerPollThreadCount()`) is not provided (NULL), `Schedulers.computation()` is returned thus maintining the default behavior. I have verified with 100 types of event queues in my local with Schedulers.computation() scheduler and it works as expected. Whereas dedicated threadpool helps in high througput scenairos where each thread is allocated for one event type.  Could we merge this PR so that existing behavior is maintained before I dig deep to identify root cause to fix in Executor scheduler area as well?  Please let me know your thoughts on this. Sidenote: Ideally, the obervables from interval() should share the threads from the passed scheduler object to poll from the queues. This happends as expected for Schedulers.computation(). In theory,Executor scheduler is expected to behave same way. But a thread from the Executor scheudler pool always polls a particular queue type instead of relinquishing it after a single call. This causes only few event types to be processed. RxJava version (1.2.2) is deprecated and I guess no support is available. I just started trying to migrate to latest RxJava 3.0.0 version to see if any bug is fixed. Apologies for the dealyed respones."
"This looks good to me. Just to have another pair of eyes, preferably from Postgres module users, can one of you help reviewing this? @raghavendra-bhat, @marosmars , @rickfish.. Thank you!"
"@mactaggart I have a query, in general, on the use of 'id' columns in the tables. I think you might have a reason in using but I don't see this column being used in any of the execution and queue dao related tables queries (except for one instance where one of the queries use ordering by Id in task_in_progress table but even that could be replaced by created_on?). @kishorebanala @rickfish"
"Looking at this comment Netflix/spectator#782, I think that something is missing (in fact, exporting the metrics as in this PR, make a lot of label/tags unavailable in Prometheus)\r\n\r\n@manan164 could you please advise on how to handle Prometheus metrics?"
How do you restart build in TravisCI? We are also trying to contribute to the project with my colleague @azb96 by merging PR #2038 @andrea11 ?

@andrea11 Is there any way we can communicate with you privately about the contribution process for guidance?
@apanicker-nflx could you please review this PR and eventually merge it? Thank you
@rickfish @raghavendra-bhat could you please help with reviewing this PR?
@rickfish Can you please verify the changes to the postgres module?\r\n@mashurex Can you help reviewing the changes to the mysql module?
@apanicker-nflx \r\nCan you please review this PR? \r\nThanks
I don't see 'es7-persistence' folder in main branch.  any plans to make it available ?

"Our build is failing with this error. Can you help us please? \r\n\r\n@kishorebanala @apanicker-nflx @aravindanr @jfernandez\r\n\r\n```\r\ntoomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit\r\nNo stopped containers\r\n> Task :conductor-mysql-persistence:integrationTestDockerComposeUp FAILED\r\nFAILURE: Build failed with an exception.\r\n* What went wrong:\r\nExecution failed for task ':conductor-mysql-persistence:integrationTestDockerComposeUp'.\r\n> Exit-code 1 when calling docker-compose, stdout: N/A\r\n```"
@kishorebanala could you please review our PR?
"Hello @kishorebanala,\r\n\r\nWe have completed all of your requested changes. Could you please review our PR again?"
"@moustaki : not sure who to contact, but is the dev branch also included for the next 3.0 version?\r\n\r\nI'd be happy to have this fix in both versions."
Hello @Jiehong how did you manage to restart your build? Ours stuck in the dockercomposeup stage and we couldn't restart our build.

@Jiehong thank you. Is there any way we can communicate with you privately about the contribution process for guidance?
"@azb96 : I don't know much more than you, as I'm not working at Netflix. @kishorebanala : would you have more info regarding @azb96 's request? Also, feel free to approve this ;)"
"Hi @rickfish \r\nThanks for the review. \r\nFlyway changed the default schema history table name from `schema_version` to `flyway_schema_history`.\r\nSo, it's not recognized your history table and you got an error.\r\nI updated the configurations to use `schema_version` as default.\r\ncan you pls try to run it again with the new commit? \r\n"
"Hi @rickfish ,\r\nAny update? Did you get a chance to look into it?"
"Hi @apanicker-nflx / @aravindanr, \r\nCould you pls review and merge this PR?\r\nThis issue blocking us, and force us to work with a forked repo.\r\nWe have a requirement to destroy and deploy new conductor clusters which consist of multiple instances, \r\nWhen we deploy a new cluster with an empty database we get the following error:\r\nERROR: duplicate key value violates unique constraint ""pg_type_typname_nsp_index""\r\nThis PR fixes this issue, by updating the flyway version (which causes this bug).\r\n\r\n\r\n"
"@apanicker-nflx When do you think someone could have a look? I personally think it's almost done. The only things that are missing are integ tests and potentially in memory tests on some of the ExecutionDAO tables. I don't think the in memory tables should be configurable, as it introduces a lot of complexities and is probably a niche feature anyway. So just testing general compatibility is fine and then letting the users define the in memory table on the sqlserver is probably a better approach."
"@apanicker-nflx I've done some cursory review at this point but my SQL Server is a bit rusty compared to MySQL and PostgreSQL.@mactaggart @rickfish @s50600822 now that there are going to be 3 different RDBMS persistence layers, do you think there would be an advantage to unifying them to some degree? I have lots of thoughts about the schema and some issues I've noticed in the MySQL layer over time. @apanicker-nflx should I create an issue for the thought? Pull request?"
"@apanicker-nflx @mactaggart @rickfish @mashurex    what are your opinions on using stored procedures? We are currently running about 50,000 WFs per day and the performance is either like MySql or little bit better at times which is pretty good. We will be running about 10 times as much in the future though. I asked our DBA what he thinks and he basically said that we should use stored procedures. The SQL Server does undesirable things with the queue_message table which sometimes cause the pop to take longer than 1 second. And these things can only be adjusted with stored procedures. Also, do you prefer I merge to version 2 or 3? There are a lot of changes in 3 so that might take longer to figure out. Thanks"
">Up until v3.0.2 it seemed like conductor.db.type was just ignored and the in memory redis/dynomite was used, and on v3.0.3 I'm getting some kind of a Bean exception when trying to use MySQL.\r\n\r\n@TwoUnderscorez This is addressed in the latest release [v3.0.4](https://github.com/Netflix/conductor/releases/tag/v3.0.4). Could you please try again? Since 3.0.x is the version with long-term support, we recommend that SQL server persistence is added to the `main` with `2.31` as the next choice."
"@apanicker-nflx @mactaggart @rickfish @mashurex  @aravindanr I have made a few more changes, can you please have a look? As for conductor 3, I'll open a seprate pull request soon. Also, do you have any idea why the integration tests for sqlserver are failing? They are working locally and I'm clearly setting the maxPoolSize [here](https://github.com/TwoUnderscorez/conductor/blob/29ac43e541dbd6afc707b6d4562654aece14d016/test-harness/src/test/java/com/netflix/conductor/tests/utils/SqlServerTestRunner.java#L54)"
"Hi @apanicker-nflx / @aravindanr \r\nThis PR not reviewed for a long time, do you think this feature/fix still relevant? (I see that the search API still returns WorkflowSummary instead of Workflow).\r\nFrom our side, it will be much easier to get Workflow and not WorkflowSummary and cast it.\r\nif it's relevant I will update the PR with the latest changes (main branch)."
Was this PR opened by mistake on the source instead of the fork?
@apanicker-nflx @aravindanr  Could you take a look at this?
"@apanicker-nflx Hi, the build failed because an ExternalPayloadStorage test which not related to my changes.Error: com.netflix.conductor.test.integration.ExternalPayloadStorageSpec > Test conditional workflow with system task using external payload storage FAILED Can you please assist? Thanks"
"@apanicker-nflx \r\nHi  the check ""coverage/coveralls â€” Coverage decreased (-0.1%) to 70.329%"" failed, but is not related to what i added in the PR, what do you suggest to do?"
"> @apanicker-nflx\r\n> Hi, the build failed because an ExternalPayloadStorage test which not related to my changes.\r\n> Error:\r\n> com.netflix.conductor.test.integration.ExternalPayloadStorageSpec > Test conditional workflow with system task using external payload storage FAILED\r\n> \r\n> Can you please assist?\r\n> \r\n> Thanks\r\n\r\nWe are aware of this flaky test in v2.x. Restarting the build fixes it. We are looking to fix this forward in v3.0\r\n\r\n>@apanicker-nflx\r\n>Hi the check ""coverage/coveralls â€” Coverage decreased (-0.1%) to 70.329%"" failed, but is not related to what i added in the PR, what do you suggest to do?\r\n\r\nCoveralls has been unreliable partly due to the fact that it is not fully configured for the project, you can ignore this."
@maheshyaddanapudi Could you please break this PR into two parts - one which adds Spring Security and another for docker file changes? This would make it easier to review and also also cleanly separate out the changes. Thanks
"> @maheshyaddanapudi Could you please break this PR into two parts - one which adds Spring Security and another for docker file changes? This would make it easier to review and also also cleanly separate out the changes. Thanks\r\n\r\n@aravindanr I understand. There are a few commits which have both the changes. Hence the easiest or fast way to segregate them for me, would be to delete the forked repo, first checkin the security changes and submit a PR. Once that is done, I can add Docker changes and create another. Does that sound ok ?"
@maheshyaddanapudi Thanks for README updates. This PR can't be merged since it contains security changes. Can you create a PR with just updates to the README file?

"@apanicker-nflx While I understand where you're coming from, I unfortunately won't be able to do what you've suggested.F337I personally think that the SQL Server is one of the most feature-rich modules and therefore should be in the main repo.* It supports fully all the workflow DAOs* Can act as a decider lock service* Highly configurable and documented* The SQL is written cooperatively with a DBA with 20+ years of experience.* It can be set up in any of these modes with only an SQL Server (no other technologies required): 1. Solo conductor with solo SQL Server (1 queue zone / no decider lock required). 2. Conductor per zone with HA (handled by Conductor) and DR (handled by SQL Server always-on cluster). a. 1 Conductor queue shard, 1  locking namespaces -> A cluster of Conductors with them dynamically assigning work depending on how big / busy each environment is. Any workflow started by any Conductor can be run by any other Conductor instance/zone. b. N Conductor queue shards, no decider lock required -> A cluster of Conductor but all workflows are local to the Conductor they were started by. A custom scheduling service is probably required for this which will devide the workload. 3. The ultimate setup - given an SQL Server always-on cluster running on 3 regions, and you have a k8s cluster on each region, deploy 2 Conductor instances on each k8s, both of the Conductor instances in each region share a queue shard and a locking namespace. Why 2 Conductor instances? In case one of them goes down and k8s is having trouble bringing it back up. We also wrote an external scheduling microservice which will do the right thing if a whole region goes down. It's not ready yet, so till then we're using 2a. While Dynomite is deprecated and is extremly difficult to set up.MySQL/Postgres - no way to devide queues by zone / zookeeper/redis is required for HA and it's not really documented Cassandra - verry little documentation and no full implemntation. So just redis is fully working? I haven't checked, but I think that sqlserver is either as feature-rich as redis or richer.If you decide to not accept this, I will just close my PRs and we'll just maintain an internal fork. I am not a Java developer and I don't want to be. I don't know how to do what you've described and unfortunately, I don't have the time and patience to learn how. Also please note, this is not yet updated with version 2 of the PR, that's why it's still marked as a draft. You should probably not look at my code here until I mark it as ""Ready for review"". I will ask you to reconsider the idea of merging this module to your repo and update me, thanks."
"@FpyrypT I've tried your branch with AWS ES7, and works well except for ""logs"" . Have you seen this before? \r\n\r\n`     \r\n       at java.lang.Thread.run(Thread.java:834) [?:?]\r\n185826 [http-nio-8080-exec-8] ERROR com.netflix.conductor.es7.dao.index."
"@aravindanr, I've added shaded es7-persistence module. Can you review the changes?"
"@aravindanr hi, when do you think you will be able to merge this PR? Thanks"

"Added a comment, merged the changes and got the same error on the build. Not used to rebasing so I added the comment. What is the process for merging to 3.x? What branch do I merge to?"
"@apanicker-nflx created a pull request for 3.x, how to get around the io.chaossystems.grpc:grpc-healthcheck:1.0.1 build error for 2.31?"
any plan on merging this one?
"@aravindanr thanks for pointing me to the discussion tab. I never noticed it I guess. I'll use it for next time.Regarding your points, perhaps they can be compatible: - If the task is FAILED already, then ""retryIfJqIstrue"" is not evaluated (aka today's behaviour) - If not (like COMPLETED) and the number of retries is not exhausted and retryIfJqIstrue is not null, then ""retryIfJqIstrue"" is evaluated its output is checked: - if ""true"": task is set to FAILED, with a message (""set for retry because of retryIfJqIstrue""), and the normal retry mecanism is used- if anything other than ""true"": status is not changed, and a message is added (something like ""retryIfJqIstrue did not evaluate to false"") What do you think?"
@apanicker-nflx can you review this RP?
"@ritu-p , can you please review this PR?"
"@aravindanr  @apanicker-nflx As part of this PR i'm upgrading the version of the amqp-client since the current version (5.9.0) contains an issue related to consumer recovery and consumer tags. Since I updated the relevant dependencies.lock files, the compilation creates the final jar with the right amqp-client version, but if i delete the dependencies.lock files and run ""_./gradlew generateLock updateLock saveLock_"" to recreate them, the lock files of the **server** and **test-harness** will have the older version 5.9.0 and not 5.13.0. This situation will cause that the final boot jar will have the amp-client:5.9.0 and not 5.13.0. Updating the following files fix the problem: 1. Add to **./server/build.gradle**_implementation( group: 'com.rabbitmq', name: 'amqp-client'){ version{require ""${revAmqpClient}""}}_ 2. Add to **./test-harness/build.gradle** _testImplementation( group: 'com.rabbitmq', name: 'amqp-client'){ version{require ""${revAmqpClient}""}}_ Are you ok with this approach or you have a better idea? Thanks"
@ritu-p @aravindanr \r\nI made the requested changes and update the unit-test.\r\nCan you please review and merge if everything is ok?\r\nThanks
@sajid-moinuddin Can you add some details about the changes in the PR?
"@kishorebanala @apanicker-nflx @aravindanr \r\nCan you please review this PR and raise concerns, if any?"
@ritu-p can you please help review this PR?
">Are there any other places I should add tests? The workflow integration tests seem to be the most logical, but please let me know!\r\n\r\nParametersUtilsTest and WorkflowAndTaskConfigurationSpec provide good coverage for this change. Thanks for adding the tests."
Is there something else that needs to be done here?
"> We have deployed this fix to our production server already, and it works as expected. How does this get back-ported to Conductor V2?\r\n\r\nThanks for taking the time to fix this bug. There is no automatic backport to 2.31. If you need this in that, please create another PR with the same changes targeting the `2.31` branch."

Do you have prints of the changes?
@aravindanr can we get this through? Current go client is not compatible with v3
@taojwmware can you execute the following gradle command and commit the changes?`./gradlew generateLock saveLock`

@aravindanr any advice here? Not sure how to kick off the above build issue?
@apanicker-nflx any insight here? Not sure if this has to do with the 2.31 travis changes in terms of the above build failure?
@apanicker-nflx or @aravindanr ? Any help here?
@james-deee Sorry about the delay. This slipped through the cracks. The Github workflow is not working correctly. Could you rebase from `Netflix:2.31` into your fork and run the checks again?
@aravindanr this build failed. Is it a change to using Java 11 over here in 2.31 land? I bet it used to compile with Java 8? There's now a failure it looks like: ``` > Task :conductor-contribs:javadoc ^  symbol:   class PreDestroy location: package javax.annotation /home/runner/work/conductor/conductor/contribs/src/main/java/com/netflix/conductor/contribs/listener/ArchivingWithTTLWorkflowStatusListener.java:53: error: cannot find symbol 2 errors @PreDestroy```https://github.com/Netflix/conductor/runs/4157426509?check_suite_focus=true
Looks like it. I switched the ci build to use Java 8. Can you rebase and try again?
@aravindanr that did it. Can you merge this when you get a chance? Thanks.
@jxu-nflx Thanks for approving it. Could you please help merge it? Thanks!
Seems the code change in this PR is unrelated to the failed test. Is it possible to rerun the check?
"Hey @rickfish ,\r\n\r\nI believe you use psql db for conductor and you helped us review this PR related to psql in the past: https://github.com/Netflix/conductor/pull/1940\r\n\r\nCould you take a look at this one as well ?\r\nAnd would this feature be useful to you ?"
"Hey @rickfish thanks for taking a look and also for the info regarding performance of PostgresExecutionDAO.getWorkflowsByCorrelationId().\r\n\r\nHey @apanicker-nflx , can we get a review on this ?"
"@Vasyl-9 Could you add Postgres payload storage as a separate module, like `azureblob-storage`?"
After a discussion with @aravindanr it appears this entire block of code is entirely unnecessary as `domain` is evaluated as part of the `tasks` array where it is available and we should just use the value as-is returned by the API. \r\n\r\nCould you try if the following simplification works?\r\n\r\n\r\n```\r\n  const handleSelectedTask = (task) => {\r\n        setSelectedTask(task)
"@apanicker-nflx , could you please merge this as we have got the required approvals?"
Wondering is this PR ready to be reviewed or still work in progress?
Anyone can do a favor for this commit? thanks a lot
"Any reason why this PR was closed, @james-deee? I believe it's important. Also, I believe you need to change not only the version in graddle, but you would need also to rerun the gradlew locking the versions: ```./gradlew generateLock saveLock```. Last, but not least, there is still vulnerability with log4j 2.16, so we should go to log4j version 2.17. Please, let me know if you can address those points."
"> Any reason why this PR was closed, @james-deee? I believe it's important. Also, I believe you need to change not only the version in graddle, but you would need also to rerun the gradlew locking the versions: `./gradlew generateLock saveLock`. Last, but not least, there is still vulnerability with log4j 2.16, so we should go to log4j version 2.17. Please, let me know if you can address those points.\r\n\r\n@flavioschuindt isn't conductor version 2 using log4j1? Which is not subject to the same problem"
Thanks for merging @apanicker-nflx. Do you have any idea of when 2.31.6 will be released with this fix in place? Thank you.
"@apanicker-nflx @aravindanr @kishorebanala I would like to discuss follow up actions with the community here: Above fix, of course, will address 2.31 branch. This means next version in this branch (maybe 2.31.7) will be ok. However, there are multiple versions in the 2.X range. In fact, just on my team, we have different versions being used at same time in production (e.g.: 2.27.2 & 2.30.3). Would be good if we had a way to backport this PR in others 2.X versions. I totally understand that is quite challenging as there are multiple versions released, but any idea how we should address it? If this PR is merged, I will open a PR soon to address my other two releases that are in production, but like I said there are other different releases that I am not even consuming on my application, but others might be using. Please, let me know your thoughts."
@flavioschuindt we are also waiting for this fix. Can anyone please merge it? Thanks!
We also need this fix urgently. Is there anything holding it up? Thanks.
"@aravindanr Hi, I have rewritten a PR about PostgreSQL external storage. Can we get a review on this?"
I reran this again locally on my system and the build was successful. Is this a problem with then environment?\r\n\r\n@apanicker-nflx @aravindanr @kishorebanala
"@venkag We do not see a significant value gain by adding this retry logic feature, specifically since there isn't a requirement from the community. Could you please provide more details on why this needs to be added to Conductor and what specific usecases you are trying to address here? Also, please note that as part of the [contributing guidelines](https://github.com/Netflix/conductor/blob/main/CONTRIBUTING.md#i-want-to-contribute), we recommend starting a [discussion](https://github.com/Netflix/conductor/discussions) to gather inputs from the community and gauge interest. This also helps to finalize the implementation details for a contribution."
"What's the driving factor behind this change, if you don't mind my asking? DTO/DO separation tends to add a lot of complexity in my experience."

"Should `HTTP` task be in its own module, like `jsonjq-task`? Adding `HTTP` to core bloats it with ""web"" related dependencies."


> If you want to use IAM client auth you need this lib so it is used only if you add the IAM authentication in the request which declare the class in this lib \r\n\r\nCan you add this as a `runtimeOnly` dependency in that case?
> @manan164 could you add more details about the bug that is fixed in this PR?\r\n\r\nHi @aravindanr  Added details.
"@dougsillars Since this documentation is published under Conductor OSS, we cannot link to Orkes playground/code blocks from it. Would it be possible to use a local Conductor server and UI to run the code lab?"
"@apanicker-nflx I realized I actually started without the `-d` flag:```docker run -p 8080:8080 -t conductor:server```When you run without `-d` do you see normal output or the exception I mentioned? And can you get a response from `curl http://localhost:8080/api/metadata/workflow`? When I run with `-d` the container starts but not healthily and I get no response when running `curl http://localhost:8080/api/metadata/workflow`. If I build the container with the fix in this PR I can see a healthy start without starting as a daemon, and I can run that curl and get the workflow definition back."
"@CherishSantoshi There are no changes here, is this intentional?"
"Yes, moved all changes to RELATED.md as suggested by @aravindanr in the first comment.\r\nRaised another PR for the same - https://github.com/CherishSantoshi/conductor/pull/2\r\nHave I missed anything?"
"Hello @v1r3n currently the Cassandra module requires an uuid for workflow and tasks: https://github.com/Netflix/conductor/blob/main/cassandra-persistence/src/main/java/com/netflix/conductor/cassandra/dao/CassandraBaseDAO.java#L152\r\nSo if a custom ID generator is used, user needs to be aware of that might not work with Cassandra module. Could you please add comment or document it somewhere?\r\n\r\nAlso, the id generator is all over the code bases, would you be interested to refactor that so to move everything to the storage layer?"

"@v1r3n After upgrading Conductor to Spring Boot 2.6.6, `java-sdk` tests are failing. Can you look into it?\r\n\r\nhttps://github.com/Netflix/conductor/runs/6085953694?check_suite_focus=true"
"@apanicker-nflx - I have created a new PR #2964 to fix the problem, I was unable to edit this PR. Can we mark this PR as wont fix and merge #2964 instead?"
"@apanicker-nflx sure - I'll add some documentation.What would be the best place for it and its extent?The only thing I was able to find related to `conductor.redis.hosts` is a comment in `application.properties````#format is host:port:rack separated by semicolonconductor.redis.hosts=host1:port:rack;host2:port:rack:host3:port:rack```Would it be enough just adding to that? or would you prefer having something like ""Configuring Redis"" under `/docs/how-tos` and an entry in `spring-configuration-metadata.json`?"
"A comment in `application.properties` would help devs.\r\nAdditionally, a section in the docs to elaborate would provide more clarity. @dougsillars Could you point to the best place for adding this documentation?"
@v1r3n can you update the documentation section for `WAIT` task? cc: @dougsillars
@v1r3n Could you please add a documentation entry for this task? cc: @dougsillars
@aravindanr Can you please help to review it? Thanks.
@v1r3n could you take a look at this PR?
"Just my 2 cents here, but loosening this type to a String doesn't seem quite like the correct thing to do here. Wonder if there's a better thing we can do to achieve your goal.\r\n\r\n@manan164 can you give everyone a more descriptive, in depth explanation of what you are trying to get by doing this? I can't quite tell by your comment above."
Hi @aravindanr  @apanicker-nflx any update on this please?
@jxu-nflx Would you please kindly advise If this PR fixed only switch task or applicable for all kinds of tasks? i.e. fixed the issue #3089 completely?



"@manan164, thank you for the fix. Does anything prevent merging of this fix?\r\n"
"nit: Title and description of this PR to be modified to maybe ""fix scheduleTime of task""?"
Can you add a test for the changes?
"@apanicker-nflx If this looks ok to you can you approve the workflow? Also I have the doc changes for https://github.com/Netflix/conductor/issues/2975 staged, I don't see them added yet. Can I add them as well along with the current change?"
@ghoshabhi and @apanicker-nflx when is an ETA that we can expect this to get merged and for a new release of Conudctor to go out? I know there is also some batch polling that was added to the Java client that we'd also like to take advantage of. Thanks!
@jxu-nflx When will the next release happen ?\r\nWe want to leverage batch polling support.
> @apanicker-nflx Requesting your review\r\n\r\n@apanicker-nflx Can you help with review ?
"Hi @charybr , thanks for reporting. \r\nFor \r\n1. Is possible for you to share the definition? May be the condition is in such a way that it executes only one iteration or some parsing error.\r\n2. Are you trying to put task output in external storage? The conductor has a limit on that. By default, it is 10MB.\r\nLet me know if this works, or we can chat [here](https://join.slack.com/t/orkes-conductor/shared_invite/zt-xyxqyseb-YZ3hwwAgHJH97bsrYRnSZg) for more realtime collaboration."
"Hi @aravindanr , can you please review the changes? cc @AvitalOfstein"
"@manan164 , i got the following error when starting conductor on the last main branch, how can I configure `MeterRegistry`?```[com/netflix/conductor/core/config/ConductorCoreConfiguration.class]: Unsatisfied dependency expressed through method 'getEventQueueProviders' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'conductorEventQueueProvider' defined in URL [jar:file:/Users/xxx/workspace/platform/conductor/core/build/libs/conductor-core-3.14.0-SNAPSHOT.jar!/com/netflix/conductor/core/events/queue/ConductorEventQueueProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'getQueueDAOStandalone' defined in class path resource [io/orkes/conductor/queue/config/RedisQueueConfiguration.class]: Unsatisfied dependency expressed through method 'getQueueDAOStandalone' parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'io.micrometer.core.instrument.MeterRegistry' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}```the relevant snippet of `application.properties`:```conductor.queue.type=redis_standalone conductor.redis.hosts=redis.xxx.amazonaws.com:6379:us-west-2b"
"Hi @missedone , Thanks for reporting. Can you please share the properties used other than those mentioned above? I tried but could not be able to reproduce it."

"Hi @missedone , I tried with above properties but looks like server works fine.\r\nI see you are using postgres and queue so I have added `implementation ""com.netflix.conductor:conductor-postgres-persistence:3.13.3""` in server/build.gradle. Rest all things kept same. Can you please join [community](https://join.slack.com/t/orkes-conductor/shared_invite/zt-xyxqyseb-YZ3hwwAgHJH97bsrYRnSZg)? We can debug together."
@sourabh30 can you resolve the conflicts?
@bjpirt can you resolve the conflicts?
"Hi @astelmashenko , Changes looks good. Can you please add a small unit test around this? Please check [reference](core/src/test/java/com/netflix/conductor/core/events/TestSimpleActionProcessor.java)"
"@manan164 , I quickly checked the reference test. DefaultEventQueueProcessor is wirtten a way it will require a lot of ceremony to setup a test. To make it easier to test DefaultEventQueueProcessor should be refactored e.g. into testable service with logic to process events and processor with code that subscribes to observable/etc. What do you think about the reafactoring?"
"@manan164 , why do not we merge this?"
"Hey @v1r3n , can we get a quick look on this small fix ?\r\n\r\nThx, Maros"
